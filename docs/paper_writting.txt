

    09.09.2020 
        usage 
        merge to dev 
        additional reqirements
        pthread 
        share our work!
    additional reqirements 
        move to develop branch 
        ...
    paper related 
        交互模式
        不同重点
        和普通的rigging区别
        possible projects? 
        share our work! 
        The project is about rigging, skinning and animating a given mesh.
    usage description 
        // basic user interfaces -- trac 17 
        0.Hi welcom to my research project "immersive rigging". let me show you how the system works.
            when the progrem starts, a [wall of buttons] is rendered in front of us. 
            A [typical workflow] is that: we first load a mesh , and then, define a skel. 
                skinning with the skel. making some animations.
                That's to say, from top to bottom.
            // dynamic
                two controllers are used.
                the right hand controller is used to Interact with the gui buttons 
                and left hand controller to perform the cooresp. operations. 
            A [visual feedback] is imp. As you can see, when the ray emmiting from the right hand controller intersects 
                with the button. It will be pushed back for a small step. 
                and then, you can click it with the grap button.
        // mesh related operations
        1.As a first step, a mesh should be loaded into the scene. This can be done by clicking here
            l_demo1/2/... The meshes are stored under CGV_DATA dir. 
            relmesh1. if a mesh is too large, we can perform an [automatic scale adjestment] by clicking on this scale_adjestment button,
                it will scale the mesh to the same hight as our headset by computing a factor and multiplies it to the current scale.
            relmesh2. additionally, we can [rotate/translate] a mesh by clicking here, rotation, trans. button 
                each time we press the button, the mesh will rotate 90 degree around the global y axis.
                the center of the mesh will be transformed to the posi. of left hand comtroller 
            relmesh3. the following buttons are used to control the [visualization styles]
                we can click here "toggle bbox" to render a bbox, here ... to ...
                we can click here to toggle if we render ... or not
        /// skeleton definition
        2.after the load of a mesh, we can now define our skeleton! 
            by clicking here [add_root], we can define a root bone, it has 6dofs. 
            after that, we click here [add_bone_exist] to add a bone to the existing bone. now it switchs to add_bone mode, 
                touch on the left hand controller to select the parent bone. touch again to fix the bone direction.
            addi1.then we have to define the local frame of the current bone. eg. we want x-asix pointing to the same direction to the bone dir, we 
                can [shuffle local frame] by clicking on this. local coordi. system.
            addi2.if we want [the other two axes] pointing on some direction, we can modify it easily. just clicking on this....
                we can rotate the local frame with the help of my left hand controller, the higher the controller, the more 
                it will rotate. (the y position has been projected to the roattional angle)
            once everything is finished, we click on the [build_bone] button to add current bone to the current skeleton.
            //
            load--[we can build a complete skeleton in this way]. Here i show you my work directly: I made a skel. before and stored it 
                as skel.2. let's load it. As mentioned on the slides, skel. can saved and loaded into the scene.
            modify--as you can see, there is a skel. placed in the middle of the mesh. we can also modify the loaded skel. eg. we 
                can [cut its arm] like this, the man becomes disabled. left hand controller 
                pointing on the bone we want to delete...and touch!
                let's load it again.
        /// skinning with pinnoccio
        4.as the skel. is defined, we can get the skel. skined with the pinnoccio library 
            in order to do so, we have to:
                (x3buttons)[write the skel. to a external file] will be feed to pinnoccio, so, click on grip button to do this. 
                then, we perfrom the [skinning operation] by ckicking this. This may take a well, it depends how camplex our skel. is. 
                after that, we have to [apply the attachments to the mesh], bone weights will be loaded for each vertex.
                those three steps can be merged to one if needed. 
        /// animate the mesh!
        5.let try to animate the mesh! 
            as the mesh is attached to the skeleton, we are now, going to animate the skel. with IK algo.
            currently, a simple ccd algorithm is imp. the mesh can follow our movements. 
            [sel]to do this, we have to define the base bone and ee. eg. lets def. the l_ee
                the box will become red after the selection as visual feedback.
            the same thing for right hand ee and the head_ee  
            we can [enable] the ik algo. with a pressing event on the touchpad
            wave hands, swim, play table tinnes
            the black cursor indicates the mirrored target position.
            //
            [rec].if you wanna record the movements, you should click on recording button first. then, start ccd, and stop recording. to check, 
                you can load it again by this. look, it works! 
        /// 附加细节，各个地方
            we can [define the skeleton in any form] we want. eg. we can just rig like this, write, auto rig, and apply attachments
            define ... and start the ccd algorithm, it looks like this. It looks wired beacause the bone is unnatural and 
            many vertices are affacted by the same bone. 
            
            you can understand the mesh better with the bbox. rotate/translate/...
                the red ball indicates the min point while the blue one indicates the max point of the bounding box.
            
            when taking a closer look, you will find that the local x-asix is pointing on the bone dir 
                and yz asix are also adjested. thus, we can define dofs easier. 
                    eg. if we define the local coordi. for the elbow like this, it is obvious that the range 
                    rotating y asix is from 0 to 135 degree.
                dofs should be adjested so that we can get a more natural result after applying IK algorithms.
        /// 附加场景介绍
            from this point of view, we can see clearly that 
            
            the other two skel. has been loaded and is imitating our motion
                to archieve this, dofs of each bone from the main skeleton has been assigned to them. 
            infoboard, showing some log informations. it rotates the same angle as our headset.
            And a table, as a future work, we can pick up some mesh editing tools from it. 
                eg. a cutting tool could be rendered here.
                    it could be used to cut off part of the mesh.
                and a mesh Morpher could be imp. at the same time.
        /// addi2 -- user guide 
    formal report/ paper 
        // as a whole system 
            Title: Immersive Rigging, Skinning and Motion Capturing 
            Abstract
                The animation of 3d models through rigging and skinning usually involves sophisticated algorithms for fitting skeletons 
                into meshes and motion capturing to gather realistic movement data. Immersed in a VR environment the user finds himself 
                in a familiar coordinate space, where working with 3d models seems more intuitive. We present a simple yet effective 
                application for rigging skinning and motion capturing. Main contributions are: 
                    1. Interactive creation and manipulation of a skeleton in 3d space. (rigging)
                    2. fitting skeletons into meshes. (skinning)
                    3. Use controllers and trackers to animate the skinned mesh. (custom motion capturing algorithm)
                    4. Recording, saving and loading of animations.
            Related Work
            Motivation 
            Introduction 

            Our Approach
                
            Experiments
                human, animal, figure, man like 
            Discussion and Future work 
            Conclusion and Limitations


        //
            easyRigging-a fast rigging and skinning scheme in vr 

            keywords: rigging, skinning, virtual reality, ... 
            categ.: vr, vis papers 

            related works:


            main contribution:
                An intunitive rigging scheme which allows us to constru. a skel. very fast in vr 
                skinning method besed on heat diffusion, manipulation of the bone weights 


